MIME-Version: 1.0
Server: CERN/3.0
Date: Wednesday, 20-Nov-96 19:52:59 GMT
Content-Type: text/html
Content-Length: 12147
Last-Modified: Monday, 02-Sep-96 00:56:57 GMT

M-Eng Projects




Masters of
Engineering
Projects

This place is a first attempt at collecting M-Eng projects. The goal is
to provide a show-case for sucessfully completed projects as well as
ideas for new projects. Contributions are welcome...

This page is from 1995! Some of the projects might still be available.

A few reminders:

This is an incomplete list. If you have a specific topic in mind, feel
free to contact the appropriate faculty member directly.

Many of the projects can be adapted from 3 to 6 credits depending on
how much work you can put in.

You need to sign up 'til sept. 30th if you want to get project credits
this semester.
However
, there is generally no reason to. You can
do the project now and get credit in the spring...

If you find that most of the interesting projects require knowledge
you don't have, look into extending a course project into the M-Eng
project. That's the best way to get the background.


Project proposals

Claire Cardie


Build any of a number of statistical models of language
processing to be used for tasks such as part-of-speech tagging and
word sense tagging of natural language text.  We will evaluate the
models by testing their performance on a corpus of real-world text
and comparing the results to the performance of an existing language
learning system that relies instead on symbolic machine learning
techniques. Note: No knowledge of linguistics is required.

We have a language acquisition system that uses symbolic machine
learning techniques to perform a number of disambiguation tasks on
natural language texts at the word level (e.g., decide the
appropriate meaning or part of speech of a word in a given context).
This project would involve extending the system to handle any of a
number of higher level disambiguation tasks like (1) deciding what
phrase a prepositional phrase modifies (e.g., "I went to the store
IN JUNE" vs.  "I went to the store IN ITHACA"), or (2)
distinguishing metaphorical from literal uses of a phrase (e.g.,
deciding that "...KILLING two birds with one stone" does not imply a
real murder).  Note: No knowledge of linguistics is required.

Docu-Vault project
: the file cabinet of
the future.

Nikos Chrisochoides

A number of projects on Problem Solving Environments

Robert Constable
Any project I offer will be part of CS572 and will
assume knowledge of Nuprl taught in that course.
I will have several ideas for projects during the
course.
Caroline Hecht
A number of
projects
are available in the Theory Center
.
Thomas Henzinger
For the following projects, you should be familiar with C and C++
programming, finite automata theory, a little bit of logic, and
college level calculus.  The additional requirements for each project
are listed below.

Hybrid System Simulation:  Write a simulator for hybrid systems,
which are distributed real-time systems that consist of interacting
digital and analog components.
User Interface:  Write a parser for a graphical hybrid system
description language, which provides the input for the hybrid system
simulator.  You have to know X-window programming.
Scientific Visualization:  Use computer graphics and animation
tools to visualize the output of the hybrid system simulator.
You have to know X-window programming, some computer graphics,
and an animation tool.
Programming Language Translation:  Write a compiler to translate
one hybrid system description language into another.  You have to know
lex and yacc.

Bruce Land
Possible projects:

visuailzation of parallel algorithms
DSTool interface to DX
greyscale stereogram by cycling through several b/w stereograms
Mosaic document structure browser
Compress/decompress modules for network computing
Mosaic conversion of CS418/417 documents
Parallelize tensor modules-eigenvalue/vector, arithmetic
Matrix inversion module
High dimensional vis development -- rotations, figure id, correlations,
hyperplanes
Neural simulator module, single compartment, nonlinear cell or abstract
neuron
Robot vision/pattern recognition modules
Vector field texture calculation --SIGGRAPH93
Surface integral module -- sum over S of (V dot n)
Oriented particles -- SIGGRAPH 92, page 185
Sea shell modeling -- SIGGRAPH 92, page 379
Evolution for graphics -- SIGGRAPH 91, page 319
Extraction of geometry from volume data -- SIGGRAPH 91, page 217
Particle animation using data parallel methods -- SIGGRAPH 90, page 405
Surfaces and spherical harmonics -- IEEE Computer Graphics July 88
Distributed vol rendering -- IEEE computer graphics, nov 1993, p16
Distributed wave computation -- SC'93 proceedings, p22
Parallel rendering -- SC'93 proceedings, pp 690, 699, 709
Antialias filter module for image output (convolution, also SIG91 page
133 \& SIG94 page 59)
NTSC filter module
Psych application visual stimuli
HDF to DX \& DX to HDF data translator, particularly image format
DX to Mathematica using Mathlink from Wolfram Research
DX to Matlab
DX module to perform surface construction from sample points
Wavelet transform

Joe Skovira

QMG
is a C++ software package for finite element mesh generation.
I have several projects connected with QMG including graphics,
interoperation with other software packages, and extensions to
the basic algorithms.  Prerequisites for this project are knowledge
of C++, matlab, and a numerical analysis course (e.g. CS421).
Thorsten von Eicken


A 155MBit ATM network with 8 Sparc-20's is available for
projects
. Some of thes
involve parallel programming for which the IBM SP-2 is also available.

WWW project
: develop extensions to WWW servers,
protocols, and browsers to enhance the support of video, interactivity,
customizability, etc...

Docu-Vault project
: the file cabinet of
the future.

Werner Vogels


Air-traffic simulator project
: build
the various blocks that make up a real air-traffic control system so
that we can construct an experimental environment for the next
generation air traffic control systems.

Horus groupware project
: build a
collection of small modules using Horus that will assist the software
designer in building a wide variety of groupware applications.

(Distributed) Operating Systems research
projects
To give students the opportunity to get their hands dirty on
some
real
operating systems research we are offering
a number of projects based on the
plan9
distributed operating system and on the
VSTA
public micro kernel.

Ramin Zabih


Write a package for displaying images and color overlays, probably on top of
X11R6 or OpenGL.
Build a system for finding and tracking people in a sequence of images.
Experience with C and images required.
Experiment with the use of visual motion for image compression.
Write C programs that write C programs for extremely efficient local image
processing.  Experience with images not required, but extensive experience
with C (and perhaps some knowledge of Lisp) is necessary.
Construct and benchmark algorithms for visual motion and stereo based on
robust statistics (especially: least median of squares).  Minimal experience
with images is required.
Various
projects
in the Robot-Vision Lab.

Rich Zippel
There are two basic areas in which we are active, development of very high
level software development tools, especially in scientific computation, and
infrastructure to support collaboration among people separated by time and
space.

In the very high level software area we are developing a new programming
paradigm, where very high level specifications of computations are
converted to executable programs via a sequence of user controlled program
transformations.  Among the projects in this area are:

Develop and code new program transformations (e.g. for
parallelization, new numerical computation techniques, or transformation
that instantiate a particular concurrency control mechanism).
By couple the existing transformations and external tools, perform
some large scale simulations, e.g. bone growth, explosion of a comet,
gravitation collapse of a pair of black holes.
Develop and improve the user interface to the program transformation
process using either Apple Common Lisp, Unix Emacs or the Synthesizer
Generator.  Since this our programs include descriptions of three
dimensional objects this may include some novel interactions with graphics
programs.
Linkage of program transformation technology with the theorem
proving and computational logic techology being developed by Prof.
Constable's group.
For collaboration, we would like to integrate our tools and technologies
with the emerging standards on the Internet.  A few of these projects are
listed below, but there are a wide number of different possibilities.

The manuals for our tools have been written in Framemaker. For
highest quality printing, we would perfer to LaTeX.  Develop tools and
processes so that World Wide Web documents (HTML) can be mantained in
parallel with the Framemaker documents.  Develop automatic tools and
processes for going back and forth between Framemaker and Latex.
A WWW manual should be organized and linked in a different fashion
than a printed manual.  Develop mechanisms and guidelines to aid in
maintaining printed and on-line manuals concurrently.
Develop databases and links between Lotus Notes and WWW for running a
software development project.  How should bug tracking be handled,
releases, versions of manuals, user's comments, demonstrations, etc.?

For further information about this WWW page contact
Thorsten von Eicken


