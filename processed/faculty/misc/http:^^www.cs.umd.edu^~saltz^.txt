Date: Thu, 21 Nov 1996 20:27:47 GMT
Server: Apache-SSL/0.4.3b
Content-type: text/html
Content-length: 5599
Last-modified: Fri, 08 Nov 1996 16:09:43 GMT



Joel Saltz




Joel Saltz


Current
Position:
Associate Professor, Computer Science

Joint Appointment
:Department of Computer
Science

University of Maryland Institute for
Advanced Computer Studies (UMIACS)

Academic Degrees:
M.D., Ph.D.,
Duke
University
, 1986.

View
my current
CV


Download
my
current
CV
Compressed Postscript



E-mail:

saltz@hyena.cs.umd.edu
Click
here
to finger.

Address/Phone:

Department of Computer Science

A.V. Williams Building

University of Maryland

College Park, MD 20742 USA

Office Phone : (301) 405-2669



Research Coordinator:

Andrea Busada

Email:
andrea@cs.umd.edu

Phone: 301-405-2729







Research Interests:

Distributed and Parallel Systems




Leads a research group at the University of Maryland College Park that
has developed methods that are making it possible to produce portable compilers
and tools to map a broad range of challenging applications on high performance
architectures. A major focus of this work is to develop techniques for
irregular scientific problems, i.e. problems that are unstructured, sparse
adaptive or block structured. This group works extensively with applications
scientists in biomedicine, computational chemistry, computational aerospace
and computational physics, and with parallel compiler vendors. Many of
the concepts first described and prototyped by this project are making
their way to High Performance Fortran during the ongoing second round of
language definition. This work has also led to the development of runtime
support (meta-CHAOS) to couple runtime support libraries used in data and
task parallel compilers. Meta-CHAOS is a central component of the Parallel
Compiler Runtime Consortium.

Currently developing techniques that will allow parallel compute and
data servers to offer their services to remote clients. The goal is to
develop techniques that will make it possible to compose programs that
execute on any combination of distributed memory, shared memory or networked
microcomputers or workstations. We are motivating this research by two
categories of applications. The first category is sensor data processing
and data fusion, and the second category is complex biomedical and physical
simulations. We have developed early prototype software able to couple
several independent data parallel programs. Our prototypes are able to
couple separately executing High Performance FORTRAN programs, and to couple
High Performance FORTRAN programs with parallel applications developed
using the Maryland CHAOS and Block Parti libraries.

This computer science research program has been motivated by collaborations
with biomedical, physical and earth scientists. Recent collaborations with
biomedical scientists have included work with NIH researchers who focus
on problems associated with molecular dynamics, protein folding, and radiation
treatment planning. Recent work with physical scientists has included collaborations
with researchers investigating computational aerospace, and computational
combustion. Current environmental science collaborators are focusing on
problems associated with the use of remote sensor data sources to characterize
the Earth's land cover and to quantify the earth's carbon
balance.

I am now expanding my group's research to focus to the application of
new ideas in systems software research to problems that arise in clinical
settings. In one set of projects, we will develop embedded systems that
are able to provide feedback and suggestions on patient care issues by
monitoring medical data from a variety of sources (e.g. a Clinical Laboratory
database, a Pharmacy database , sources of archived clinical data and the
main hospital database). In another set of projects, we will provide software
tools that can be used to facilitate large scale epidemiological and health
service research studies. We will develop tools for producing large aggregated
datasets from multiple data sources. These projects will be built using
software developed (or modified) in the course of our ongoing research
in distributed computing. Our new clinical projects will, in turn, be fed
back into our systems software research to improve the quality and the
generality of the tools we build.







